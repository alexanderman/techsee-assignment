{"version":3,"sources":["components/table.js","components/search.js","components/error.js","App.js","serviceWorker.js","index.js"],"names":["prepareBugs","data","map","d","bugs","b","title","join","icons","Check","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","ViewColumn","DetailPanel","ResetSearch","Clear","SortArrow","ArrowUpward","columns","field","sorting","options","search","showTitle","paging","toolbar","useStyles","makeStyles","container","display","marginBottom","leftColumn","flexDirection","alignItems","rightColumn","flex","inputLine","justifyContent","label","fontSize","input","padding","outline","border","borderRadius","marginLeft","width","input_err","borderColor","button","isTextValid","text","length","onSearch","classes","useState","setText","hasError","setHasError","inputClasses","buttonDisabled","Box","className","htmlFor","type","id","placeholder","onChange","e","target","value","Button","variant","disabled","color","onClick","Typography","align","MOCK_DATA","sort","a","firstName","App","setData","prepareAndSetData","Container","testerName","fetch","then","response","ok","json","Promise","reject","catch","err","console","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bd594fe7.chunk.js","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport { Search, ViewColumn, SaveAlt, ChevronLeft, ChevronRight, FirstPage, \n    LastPage, Add, Check, FilterList, Remove, Clear, ArrowUpward } from '@material-ui/icons';\n\nconst prepareBugs = data => data.map(d => ({ ...d, \n    bugs: d.bugs.map(b => b.title).join(',')\n}));\n\nexport default ({ data }) => {\n    return (\n      <MaterialTable\n\n        icons={{ \n            Check: Check,\n            Export: SaveAlt,\n            Filter: FilterList,\n            FirstPage: FirstPage,\n            LastPage: LastPage,\n            NextPage: ChevronRight,\n            PreviousPage: ChevronLeft,\n            Search: Search,\n            ThirdStateCheck: Remove,\n            ViewColumn: ViewColumn,\n            DetailPanel: ChevronRight,\n            ResetSearch: Clear,\n            SortArrow: ArrowUpward\n        }}\n\n        columns={[\n          { title: 'Fisrt Name', field: 'firstName' },\n          { title: 'Last Name', field: 'lastName' },\n          { title: 'Country', field: 'country', sorting: false },\n          { title: 'Bugs', field: 'bugs', sorting: false },\n        ]}\n\n        data={prepareBugs(data)}  \n\n        options={{\n          sorting: true,\n          search: false,\n          showTitle: false,\n          paging: false,\n          toolbar: false,\n        }}\n      />\n    )\n  }\n  ","import React, { useState } from 'react';\nimport { TextField, Container, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        marginBottom: '2rem',\n    },\n    leftColumn: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end'\n    },\n    rightColumn: {\n        flex: 1\n    },\n    inputLine: {\n        marginBottom: '.5rem',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    },\n    label: {\n        fontSize: '1.2rem',\n        marginBottom: '.5rem'\n    },\n    input: {\n        fontSize: '1.2rem',\n        padding: '.5rem .5rem',\n        outline: 0,\n        border: 'solid 1px #AAAAAA',\n        borderRadius: '.3rem',\n        marginLeft: '.5rem',\n        width: '350px'\n    },\n    input_err: {\n        borderColor: '#CC0000'\n    },\n    button: {\n        width: '369px'\n    }\n});\n\nfunction isTextValid(text) {\n    return text.length >= 2 && text.length <= 12;\n}\n\nexport default ({ onSearch }) => {\n    const classes = useStyles();\n    const [text, setText] = useState('');\n    const [hasError, setHasError] = useState(false);\n    const inputClasses = hasError ? `${classes.input} ${classes.input_err}` : classes.input;\n    const buttonDisabled = !isTextValid(text);\n\n    const onInputChange = e => {\n        setText(e.target.value);\n        setHasError(!isTextValid(e.target.value));\n    }\n\n    const clickHandler = () => {\n        if (!hasError && onSearch) {\n            onSearch(text);\n        }\n    }\n\n    return (\n        <Box className={classes.container}>\n            <Box className={classes.leftColumn}>\n\n                <Box className={classes.inputLine}>\n                    <label className={classes.label} htmlFor=\"search_inp\">Tester Name</label>\n                    <input type=\"text\" id=\"search_inp\" \n                        placeholder=\"Enter the tester name\" \n                        onChange={onInputChange}\n                        className={inputClasses}>\n                    </input>\n                </Box>\n\n                <Button variant=\"contained\" \n                    disabled={buttonDisabled} \n                    color=\"primary\" className={classes.button} \n                    onClick={clickHandler}>Fetch\n                </Button>\n\n            </Box>\n            <Box className={classes.rightColumn}></Box>\n        </Box>\n    );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    container: {\n        marginBottom: '2rem',\n        color: '#CC0000'\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n    return (\n        <Typography variant=\"subtitle1\" className={classes.container} align=\"left\">Temporary error occurred, please try again later</Typography>\n    );\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport Table from './components/table';\nimport Search from './components/search';\nimport Error from './components/error';\nimport { Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst MOCK_DATA = [{\"firstName\":\"Melisa\",\"lastName\":\"Kadosh\",\"country\":\"Israel\",\"device\":\"iPhone 6\",\"bugs\":[{\"id\":1,\"title\":\"button misplaced\"},{\"id\":4,\"title\":\"incorrect home page\"}]},{\"firstName\":\"Lynda\",\"lastName\":\"Golumb\",\"country\":\"New Zealand\",\"device\":\"Huawei P10\",\"bugs\":[{\"id\":2,\"title\":\"device is stuck\"},{\"id\":3,\"title\":\"can't load application\"},{\"id\":5,\"title\":\"no input validation\"}]},{\"firstName\":\"Artem\",\"lastName\":\"Puzailov\",\"country\":\"Ukraine\",\"device\":\"Galaxy S7\",\"bugs\":[{\"id\":7,\"title\":\"Chrome displays jibberish\"}]},{\"firstName\":\"Rob\",\"lastName\":\"Rabbi\",\"country\":\"UK\",\"device\":\"Xiomi Note 5\",\"bugs\":[{\"id\":11,\"title\":\"invalid text\"},{\"id\":21,\"title\":\"shifted display\"},{\"id\":13,\"title\":\"mis aligned buttons\"},{\"id\":15,\"title\":\"server crash\"}]},{\"firstName\":\"Neved\",\"lastName\":\"Dorsell\",\"country\":\"Sweden\",\"device\":\"Nokia D56\",\"bugs\":[{\"id\":13,\"title\":\"slow loading\"},{\"id\":16,\"title\":\"pixeled video\"}]},{\"firstName\":\"Silvi\",\"lastName\":\"Rushfeld\",\"country\":\"Germany\",\"device\":\"LG G5\",\"bugs\":[{\"id\":11,\"title\":\"blank end page\"}]},{\"firstName\":\"Will\",\"lastName\":\"Debill\",\"country\":\"US\",\"device\":\"iPhone X\",\"bugs\":[{\"id\":11,\"title\":\"login stuck\"},{\"id\":21,\"title\":\"shifted display\"}]}].sort((a, b) => a.firstName < b.firstName ? -1 : 1);\nconst API_URL = 'https://test-api.techsee.me/api/ex/';\n\nconst useStyles = makeStyles({\n    container: {\n        \n    },\n    title: {\n        marginBottom: '1rem'\n    }\n});\n\nfunction App() {\n    const classes = useStyles();\n    const [hasError, setHasError] = useState(false);\n    const [data, setData] = useState(MOCK_DATA);\n\n    const prepareAndSetData = (data = []) => {\n        data.sort((a, b) => a.firstName < b.firstName ? -1 : 1)\n        setData(data);\n    }\n\n    const search = testerName => {\n        fetch(`${API_URL}${testerName}`)\n        .then(response => {\n            if (!response.ok) {\n                return Promise.reject();\n            }\n            return response.json();\n        })\n        .then(prepareAndSetData)\n        .catch(err => {\n            console.error(err);\n            prepareAndSetData([]);\n            setHasError(true);\n        });\n    }\n\n    return (\n    <div className=\"App\">\n        <Container className={classes.container}>\n            <Typography variant=\"h4\" className={classes.title}>Search Bugs</Typography>\n            <Search onSearch={search} />\n            { hasError &&  <Error /> }\n            <Table data={data} />\n        </Container>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}